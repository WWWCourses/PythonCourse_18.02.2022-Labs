# --------------------------------- Задача 1. -------------------------------- #
# Да се напише програма, която да реализира генератор на четни числа.
### with generator function:
# def even_generator():
# 	for i in range(1, 10):
# 		if i % 2 == 0:
# 			print(f'i in generator: {i}')
# 			yield i

# even_gen = even_generator()
# # print(type(even_gen))

# for item in even_gen:
# 	print(item)


### with generator comprehension:

# --------------------------------- Задача 4. -------------------------------- #
# Да се напише програма, която да реализира итератор на четни числа.
#

# --------------------------------- Задача 6. -------------------------------- #
# Да се напише програма, която от даден списък да прехвърля положителните числа в един списък и отрицателните в друг.
# Пример:
# [1, -2, 3, -4, 5, -6] -> [1, 3, 5] and [-2, -4, -6]


# Задача 7. Да се промени 6та задача така, че да използва итератор.

# Задача 8. Да се напише програма, която да кара потребителят да въвежда стринг от клавиатурата и да поставя всички гласни в едни списък и всички съгласни в друг.

# Задача 9. Да се промени задача 8 така, че да използва итератор.

# Задача 10. Да се напише програма, която да конкатенира два списъка и след това да ги
# сортира.

# -------------------------------- Задача 11. -------------------------------- #
# Напишете генератор, който да намира аритметична прогресия, като
# потребителят въвежда началото, стъпката на прогресия и колко числа да покаже от
# редицата.

# Задача 12. Да се напише генератор, който да намира геометрична прогресия, като
# потребителят въвежда началото, стъпката и колко числа да покаже.

# Задача 13. Да се реализира декартово произведение на две множества, като се използва
# съкратен запис за създаването на списъкът с крайните елементи.

# Задача 14. Да се промени задача 13 така, че да използва itertools.product.