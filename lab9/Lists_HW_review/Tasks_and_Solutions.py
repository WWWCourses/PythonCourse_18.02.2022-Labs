# --------------------------------- Задача 1. -------------------------------- #
""" Напишете програма, която чете цели числа въведени от потребителя и ги
	съхранява в списък. Програма трябва да продължи да чете стойности, докато
	потребителят не въведе 0. След това тя трябва да покаже всички стойности, въведени от
	потребителя (с изключение на 0), подредени от най-малката до най-голямата стойност,
	като на всеки ред се появява по една стойност. Използвайте или метода за сортиране,
	или функцията за сортиране на списъци.
"""
# numbers = []

# while True:
# 	try:
# 		x = int( input("Please provide a number: ") )
# 	except:
# 		continue

# 	if x==0:
# 		break
# 	else:
# 		numbers.append(x)

# list_new = sorted(numbers)

# for el in list_new:
# 	print(el)



# --------------------------------- Задача 2. -------------------------------- #
""" При анализиране на данни, събрани като част от научен експеримент, може
 	да се наложи да се премахнат най-крайните (големите) стойности, преди да се
 	извършват някакви други изчисления. Да се създаде списък от стойностите само с n на
 	брой положителни числа. Трябва да се създаде ново копие на създаденият списък с
 	премахнатите n най-големи елемента и n най-малките елементи. Редът на елементите
 	във върнатия списък не трябва да съвпада с реда на елементите в първоначалния
 	списък. Напишете програма, която да чете списък от числа въведени от потребителя и
 	да премахва двете най-големи и двете най-малки стойности. Да се принтира новият
 	списък, както и оригиналният. Програма трябва да генерира подходящо съобщение за
	грешка, ако потребителят въведе по-малко от 4 стойности.
"""

# numbers = []
# n = 2
# min_numbers_count = 4
# new_numbers = []

# while True:
# 	try:
# 		x = int( input("Please provide a positive number: ") )
# 	except:
# 		continue

# 	if x==0:
# 		break
# 	elif x<0:
# 		continue
# 	else:
# 		numbers.append(x)

# if len(numbers)<4:
# 	print(f'You must enter {min_numbers_count-len(numbers)} more numbers')

# numbers = [1,5,3,5,6,7]

# new_numbers = sorted(numbers)
# new_numbers = new_numbers[n:-n]
# print(new_numbers)


# --------------------------------- Задача 3. -------------------------------- #
"""Да се създаде програма, която чете думи като вход от клавиатурата, докато
	потребителят не въведе празен ред. След като потребителят въведе празен ред,
	програмата трябва да изведе всяка дума, въведена от потребителя точно веднъж.
	Думите трябва да се показват в същия ред, в който са били въведени. Например, ако
	потребителят въведе:
	first
	second
	first
	third
	second
	тогава програмата трябва да принтира само:
	first
	second
	third
"""
# words = []

# while True:
# 	word = input("Please provide a word: ")
# 	if word == '':
# 		break

# 	if word not in words:
# 		words.append(word)

# print(words)


# --------------------------------- Задача 4. -------------------------------- #
""" Да се създаде програма, която да чете цели числа въведени от потребителя,
	докато не бъде въведен празен ред. След като всичките числа са прочетени, програмата
	трябва да показва всички отрицателни числа, последвани от нули, последвани от всички
	положителни числа. Във всяка група номерата трябва да се показват в същия ред, в
	който са въведени от потребителя. Например, ако потребителят въведе стойностите
	3, -4, 1, 0, -1, 0 и -2, вашата програма трябва да изведе стойностите -4, -1, -2, 0, 0, 3 и 1 .
	Вашата програма трябва да показва всяка стойност на нов ред.
"""
# positeves = []
# negatives = []
# zeros = []


# while True:
# 	n = input("Please provide a number: ")
# 	if n == "":
# 		break

# 	n = int(n)

# 	if n < 0:
# 		negatives.append(n)
# 	elif n == 0:
# 		zeros.append(n)
# 	else:
# 		positeves.append(n)

# for el in negatives+zeros+positeves:
# 	print(el)

# --------------------------------- Задача 5. -------------------------------- #
""" За да спечели най-голямата награда в определена лотария, човек трябва да
	съпостави всичките 6 числа от билета си с 6-те числа между 1 и 49, които са изтеглени от
	организатора на лотарията. Напишете програма, която генерира произволен избор от 6
	числа за лотариен билет. Уверете се, че избраните 6 числа не се повтарят. Покажете
	числата във възходящ ред.
"""
# import random

# numbers = []
# counter = 1


# while counter <= 6:
# 	number = random.randint(1, 49)

# 	if number not in numbers:
# 		numbers.append(number)
# 		counter += 1

# print(numbers)

# --------------------------------- Задача 6. -------------------------------- #
""" Да се напише програма, която генерира всички подсписъци на даден списък.
	Например, списъците на [1, 2, 3] са [], [1], [2], [3], [1, 2], [2, 3], [1, 3] и [1, 2, 3].
"""
from itertools import combinations

l = [1, 2, 3]
sub_lists = []



# print(list(combinations(l, 0)))


# --------------------------------- Задача 7. -------------------------------- #
""" Напишете програма, която намира максимална редица от последователни
	еднакви елементи в списък.
	Пример: {2, 1, 1, 2, 3, 3, 2, 2, 2, 1} -> {2, 2, 2}. ‘2’ * counter
"""

# --------------------------------- Задача 8. -------------------------------- #
""" Напишете програма, която намира максималната редица от последователни
	нарастващи елементи в списък.
	Пример: {3, 2, 3, 4, 2, 2, 4} -> {2, 3, 4}.
"""


# --------------------------------- Задача 9. -------------------------------- #
""" Напишете програма, която създава следните квадратни матрици и ги
	извежда на конзолата във форматиран вид. Размерът на матриците се въвежда от
	конзолата. Пример за (4,4):

			1	5	9	13			1	8	9	16
		a)	2	6	10	14    b)	2	7	10	15
			3	7	11	15			3	6	11	14
			4	8	12	16			4	5	12	13
"""

